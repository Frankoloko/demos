Create SSH Key

1. In powershell: ssh-keygen, press enter on everything
2. Open the file that got created (id_rsa.pud) and copy the key
3. Go to GitLab, SSH keys, and paste key you copied
4. ssh git@gitlab.com

make sure you configure your 'user.name' and 'user.email' in git

git config --global user.name "FIRST_NAME LAST_NAME" (like "Francois Kruger")
git config --global user.email "MY_NAME@example.com"

---------------------------------

VSCODE CAN'T SEE GIT REPO
If you run "git status" in the same folder, and you see an error like:
fatal: unsafe repository ('/media/data1/project1/si/project' is owned by someone else.

Then you can try and run:
git config --global --add safe.directory *

If you get the error: wrong number of arguments, should be 2
git config --global --add safe.directory "*"

To fix it

Or check out:
https://stackoverflow.com/questions/71855882/how-to-add-directory-recursively-on-git-safe-directory

---------------------------------

- 1: Open GitLab website and go to "Access Tokens" https://gitlab.com/-/profile/personal_access_tokens
- 2: Create a new Access Token, check all the permissions you need
- 3: After creating one, copy the token created at the top of the page

- 4: In SourceTree, go to Options/Authentication/add
- 5: Change the host to Gitlab
- 6: Hit the "Refresh Personal Access Token" button
- 7: This should popup a new window where you enter your
	- username (Gitlab username, NOT EMAIL, like "@Francois_Kruger_Triggerfish"
	- password (the token you copied at step 3)

- ? If the popup doesn't open on step 7, try logging in first by going to the "earth globe" ("Remote") on the
    sourcetree UI and logging in like that.

-----------

If you get any "host" issues, try this:
ssh git@gitlab.com

More info here:
https://stackoverflow.com/questions/45538408/host-key-verification-failed-gitlab-with-visual-studio-code-on-macos

-----------

Try just recloning/re-copy-pasting the repo if you have issues pushing and pulling

-----------

To change your code to an older git:
In the vscode git graph addon:
- Right click a commit and select "Reset current branch to this commit..."

-----------

https://support.atlassian.com/bitbucket-cloud/docs/configure-your-dvcs-username-for-commits/

make sure you configure your 'user.name' and 'user.email' in git

git config --global user.name "FIRST_NAME LAST_NAME"
git config --global user.email "MY_NAME@example.com"

-----------

Squash
1. git rebase -i HEAD~3 (where 3 is the amount of commits)
2. Change the front words to “squash” for everything except the top commit.
3. Then hit esc and :wq to exit
4. Then on a next screen delete all the white test (remove the commit messages). And easy way to do this is to hit "dd" while in edit more. Then edit your latest (top) one and :wq
5. After you are done run “git push - -force” (remove the space between the dashes)

-----------

Change branch that your branch was made off of (Rebasing)

Lets say you created a new branch called feature/FEATPIPE-1234-python-3-changes
But you branched off of master
When you should have branched off of develop
So, we want to change the "branch from" branch to "develop"

git rebase master feature/FEATPIPE-4163-python-3-changes --onto develop
git push --force

-----------

Renaming a branch

https://stackoverflow.com/questions/6591213/how-do-i-rename-a-local-git-branch

1. Rename the current branch:
git branch -m <newname>

2. To push the local branch and reset the upstream branch:
git push origin -u <newname>

3. To delete the remote branch:
git push origin --delete <oldname>

Note that in all cases, you don't need to add "origin/" to your branches in here.
So use:
git push origin --delete feature/my-branch
And not:
git push origin --delete origin/feature/my-branch
